# -*- coding: UTF-8 -*-
import DatabaseLogicMarket
import DatabaseLogicProduct
import DatabaseLogicBuyData
import telebot
import DatabaseLogicAdminPanel

class NameSpace:
    # &#128138;
    ANSWER_STARTMARKET = "&#9940;  <b>–í–ù–ò–ú–ê–ù–ò–ï</b>  &#9940;\n\n&#128202;  –£ –Ω–∞—Å —Å–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã  &#128202;\n\n&#128722;  –°–∞–º—ã–µ –±–æ–ª—å—à–∏–µ —Å–∫–∏–¥–∫–∏  &#128722;\n\n&#9878; –ê–¥–µ–∫–≤–∞—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã  &#9878;\n\n\n&#9989; –ù–µ –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞–π –Ω–∞ –≥–∏–¥—Ä–µ –∑–∞ –ø–µ—Ä–µ–≤–æ–¥—ã, –±–µ—Ä–∏ —Ä–∞–∑—É–º–Ω–æ, –æ–ø–ª–∞—á–∏–≤–∞–π –∫–∞–∫ —Ç–µ–±–µ —Ö–æ—á–µ—Ç—Å—è\n\n&#127759;  –ò–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥  &#127759;"
    ANSWER_DELETEPRODUCT = "–í–≤–µ–¥–∏—Ç–µ"
    ANSWER_ADDPRODUCT = "&#128226; –í–ù–ò–ú–ê–ù–ò–ï &#128226;\n&#128218; –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–Ω–æ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ:\n\n–ò–º—è\n–¶–µ–Ω–∞\n–¢–∏–ø —Ñ–∞—Å–æ–≤–∫–∏(–≥—Ä–∞–º–º/—à—Ç—É–∫)"
    ANSWER_REQESTJOBTEST = "&#128204;  –ü—Ä–∏–º–µ—Ä:\n\n1.  –ö—É—Ä—å–µ—Ä\n2.  2/2\n3.  Telegram @examplecontact\n4.  –ú–æ—Å–∫–≤–∞"
    ANSWER_REQUESTJOB = "&#128203;  –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏:\n\n1.  –ö–µ–º —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å\n2.  –£–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å –≥—Ä–∞—Ñ–∏–∫\n3.  –ö–æ–Ω—Ç–∞–∫—Ç—ã(<b>Telegram</b>)\n4.  –ì–æ—Ä–æ–¥\n\n" + ANSWER_REQESTJOBTEST
    ANSWER_SECTIONADMINCONTROL = "–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ ADMIN CONTROL"
    ANSWER_OKADD = "–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"
    ANSWER_JOBMESSAGE = "&#128142; –•–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∞–º–∏ ? &#128142; \n–í–æ—Ç —á—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:\n\n&#128178;  –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ó–ü\n&#128348;  –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ –≤—ã–±–æ—Ä\n&#128176;  –ê–∫—Ç–∏–≤–Ω—ã–π –∫–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç\n\n–ù–∞–º –Ω—É–∂–Ω—ã:\n <b>&#128694;  –ö—É—Ä—å–µ—Ä—ã –ø–µ—à–∏–µ</b>\n <b>&#128661;  –í–æ–¥–∏—Ç–µ–ª–∏(–ª–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –∑–∞–≥—Ä–∞–Ω –ø–∞—Å–ø–æ—Ä—Ç)</b> \n&#128138;  –•–∏–º–∏–∫–∏(—Å –æ–ø—ã—Ç–æ–º –∏ –±–µ–∑)\n\n–ù–∞–∂–º–∏—Ç–µ –û–¢–ü–†–ê–í–ò–¢–¨ –ó–ê–Ø–í–ö–£ –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ :)"
    ANSWER_ERRORCODE = "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞.\n–õ–∏–±–æ –≤—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞."
    ANSWER_WELCOM = "&#128142;   –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ   &#128142;\n\n&#128073;  –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é"
    ANSWER_ENTERREFCODE = "&#127873;  –í–≤–µ–¥–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥  &#127873;"
    ANSWER_SAVEDATABITCOIN = "–î–∞–Ω–Ω—ã–µ Bitcoin —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã."
    ANSWER_SAVEDATAQIWI = "–î–∞–Ω–Ω—ã–µ QIWI —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã."
    ANSWER_ERROR = "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Ç–∞–∫–∏–µ –≤–µ—â–∏ :("
    ANSWER_ENTERNEWDATAQIWI = "–û—Ç–ø—Ä–∞–≤—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É –ø–æ –Ω–∏–∫–Ω–µ–π–º—É, –ª–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ —Å–∞–º –Ω–∏–∫–Ω–µ–π–º"
    ANSWER_ENTERNEWFATABITCOIN = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Bitcoin"
    ANSWER_LEVELADMIN = "&#128220;  –ö–∞–∫–∏–µ –ø—Ä–∞–≤–∞ –±—É–¥—É—Ç?\n\n&#128273;  0 - –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø\n&#128273;  1 - –î–æ—Å—Ç—É–ø –Ω–∞ —á—Ç–µ–Ω–∏–µ/–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–∫–≤–µ–∑–∏—Ç–æ–≤, –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π(–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞ 0 —É—Ä–æ–≤–Ω—è)\n&#128273;  2 - –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–æ–º—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π."
    ANSWER_ADMIN_WELCOME = "&#128526 <b>{}</b>. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AdminPanel \n \n &#128172 –î–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π\n &#128172 –ü–æ —Ç–µ—Ö.–≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ —Ä@–∑—Ä–∞–±y :)\n"
    ANSWER_ADMIN_STAT = "&#127919; –í–æ—Ç –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ 	&#127919; \n\n&#128064 –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {}\n&#128064 –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π: {}\n&#128064 –ö–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–∫: {}\n\n&#128084; –ö–æ–ª-–≤–æ –ø–æ–¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫: {}\n\n&#127942; –û—Ö–≤–∞—Ç –º–∞–≥–∞–∑–∏–Ω–∞:\n\n&#127970;  –ì–æ—Ä–æ–¥–æ–≤: {}\n&#127973;  –†–∞–π–æ–Ω–æ–≤: {}\n&#128138;  –¢–æ–≤–∞—Ä–æ–≤:  {}"
    ANSWER_EDITCONTACT ="&#128221;  –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞\n\n&#128204  –ü—Ä–∏–º–µ—Ä: @examplecontact"
class ListKeyBoard:
    kb_setting_back = telebot.types.InlineKeyboardButton(text='‚èÆ –ù–∞–∑–∞–¥', callback_data='setting_data')
    kb_world_back = telebot.types.InlineKeyboardButton(text='‚èÆ –ù–∞–∑–∞–¥',callback_data='world_data')
    button_menu_admin = telebot.types.InlineKeyboardButton(text="‚èÆ –ú–µ–Ω—é", callback_data="admin_menu")
    button_back_admin_control = telebot.types.InlineKeyboardButton(text='‚èÆ –ù–∞–∑–∞–¥',callback_data='control_admin')

    KB_SALE_JOIN = telebot.types.InlineKeyboardMarkup()
    KB_SALE_JOIN.add(telebot.types.InlineKeyboardButton(text='üïí –û—Ç–∫—Ä—ã—Ç—å',callback_data='join_market'))

    KB_WORL_JOIN = telebot.types.InlineKeyboardMarkup()
    kb_yes = telebot.types.InlineKeyboardButton(text='‚úçÔ∏è',callback_data='job_join')
    kb_not = telebot.types.InlineKeyboardButton(text='üëé',callback_data='cancel_pay')
    KB_WORL_JOIN.row(kb_yes,kb_not)

    kb_all_cancel = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb_all_cancel.add("‚ùå –û—Ç–º–µ–Ω–∞")
    KB_DEFAULT = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    KB_DEFAULT.add('‚èÆ –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é')
    KB_DEFAULT.add('üè™ –ú–∞–≥–∞–∑–∏–Ω')
    KB_DEFAULT.add('üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
    KB_DEFAULT.add('üìù –í–≤–µ—Å—Ç–∏ –∫–æ–¥')
    KB_DEFAULT.add('üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∞–º–∏')



    KB_DEFAULTANDADRMIN = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    KB_DEFAULTANDADRMIN.add('üëΩ –ú–µ–Ω—é –ê–¥–º–∏–Ω–∫–∏')
    KB_DEFAULTANDADRMIN.add('üè™ –ú–∞–≥–∞–∑–∏–Ω')
    KB_DEFAULTANDADRMIN.row('üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
    KB_DEFAULTANDADRMIN.row('üìù –í–≤–µ—Å—Ç–∏ –∫–æ–¥')
    KB_DEFAULTANDADRMIN.add('üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∞–º–∏')

    KB_JOBMENU = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    KB_JOBMENU.row('‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ó–∞—è–≤–∫—É', '‚èÆ –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é')
    KB_JOBCANCEL = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    KB_JOBCANCEL.add("–û–¢–ú–ï–ù–ê")


    KB_ADMINCONTROL = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    KB_ADMINCONTROL.row('–î–æ–±–∞–≤–∏—Ç—å –ê–¥–º–∏–Ω–∞', '–£–¥–∞–ª–∏—Ç—å –ê–¥–º–∏–Ω–∞')
    KB_ADMINCONTROL.add('–ö–∞–∫–∏–µ —É –º–µ–Ω—è –ø—Ä–∞–≤–∞?')
    KB_ADMINCONTROL.add('üëΩ –ú–µ–Ω—é –ê–¥–º–∏–Ω–∫–∏')

    KB_ADMIN = telebot.types.InlineKeyboardMarkup()
    kb_main_menu = telebot.types.InlineKeyboardButton(text='‚èÆ –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é',callback_data='main_menu')
    kb_stat = telebot.types.InlineKeyboardButton(text='üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',callback_data='stat_data')
    kb_order = telebot.types.InlineKeyboardButton(text='üìã –ó–∞—è–≤–∫–∏',callback_data='order_data')
    kb_buy = telebot.types.InlineKeyboardButton(text='üí∞ –†–µ–∫–≤–∏–∑–∏—Ç—ã',callback_data='buy_data')
    kb_setting = telebot.types.InlineKeyboardButton(text='üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='setting_data')
    kb_control_admin = telebot.types.InlineKeyboardButton(text=' üîë –£—á.–ó–∞–ø–∏—Å–∏',callback_data='control_admin')
    kb_world = telebot.types.InlineKeyboardButton(text='üåè –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏',callback_data='world_data')
    kb_sale = telebot.types.InlineKeyboardButton(text='üîî –†–∞—Å—Å—ã–ª–∫–∞ üîî',callback_data='sale_data')
    KB_ADMIN.add(kb_main_menu)
    KB_ADMIN.row(kb_stat, kb_order)
    KB_ADMIN.row(kb_buy, kb_setting)
    KB_ADMIN.row(kb_control_admin, kb_world)
    KB_ADMIN.add(kb_sale)

    KB_SALE = telebot.types.InlineKeyboardMarkup()
    button_sale_precent_10 = telebot.types.InlineKeyboardButton(text='üõç –°–∫–∏–¥–∫–∞ 10%',callback_data='sale_10')
    button_sale_precent_20 = telebot.types.InlineKeyboardButton(text='üõç –°–∫–∏–¥–∫–∞ 20%',callback_data='sale_20')
    button_new_product = telebot.types.InlineKeyboardButton(text='üî•  –ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä –Ω–∞ —Ä–∞–π–æ–Ω–µ  üî•',callback_data='push_product')
    button_job_need = telebot.types.InlineKeyboardButton(text='üíº  –ù—É–∂–Ω—ã —Ä–∞–±–æ—á–∏–µ  üíº',callback_data='push_work')
    KB_SALE.add(button_menu_admin)
    KB_SALE.row(button_sale_precent_10,button_sale_precent_20)
    KB_SALE.add(button_new_product)
    KB_SALE.add(button_job_need)

    KB_CONTROL_ADMIN = telebot.types.InlineKeyboardMarkup()
    kb_all_admin = telebot.types.InlineKeyboardButton(text='üëÆ‚Äç‚ôÇÔ∏è ‚Äç–í—Å–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',callback_data='all_admin')
    kb_my_right = telebot.types.InlineKeyboardButton(text='üìú –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ',callback_data='admin_info_data')
    kb_delete_admin = telebot.types.InlineKeyboardButton(text='‚ûñ –£–¥–∞–ª–∏—Ç—å –ê–¥–º–∏–Ω–∞.',callback_data='admin_delete_data')
    kb_add_admin = telebot.types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –ê–¥–º–∏–Ω–∞.',callback_data='admin_add_admin')
    KB_CONTROL_ADMIN.add(kb_all_admin)
    KB_CONTROL_ADMIN.add(kb_my_right)
    KB_CONTROL_ADMIN.row(kb_add_admin, kb_delete_admin)
    KB_CONTROL_ADMIN.add(button_menu_admin)

    kb_button_order_all = telebot.types.InlineKeyboardButton(text='üìã –í—Å–µ –ó–∞—è–≤–∫–∏',callback_data='order_all')
    kb_button_order_last = telebot.types.InlineKeyboardButton(text='üìú –ü–æ—Å–ª–µ–¥–Ω—è—è',callback_data='order_last')
    kb_button_order_delete = telebot.types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –≤—Å–µ',callback_data='order_delete')

    KB_BUY = telebot.types.InlineKeyboardMarkup()
    button_edit_qiwi = telebot.types.InlineKeyboardButton(text='üíµ –ò–∑–º–µ–Ω–∏—Ç—å Qiwi',callback_data='edit_qiwi')
    button_edit_bitcoin = telebot.types.InlineKeyboardButton(text='üíµ –ò–∑–º–µ–Ω–∏—Ç—å BitCoin',callback_data='edit_bitcoin')
    KB_BUY.add(button_edit_qiwi)
    KB_BUY.add(button_edit_bitcoin)
    KB_STAT = telebot.types.InlineKeyboardMarkup()
    button_stat_all = telebot.types.InlineKeyboardButton(text='–î–∞–ª–µ–µ ‚è©', callback_data='stat_all')
    button_stat_default = telebot.types.InlineKeyboardButton(text='‚è™ –ù–∞–∑–∞–¥', callback_data='stat_data')
    KB_CANCEL_S = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    KB_CANCEL_S.add('‚ùå –û—Ç–º–µ–Ω–∞')

    KB_CITYCONTROL = telebot.types.InlineKeyboardMarkup()
    button_all = telebot.types.InlineKeyboardButton(text='üìÇ –í—Å–µ –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏',callback_data='allworld')
    button_addcity = telebot.types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –ì–æ—Ä–æ–¥',callback_data='addcity')
    button_addarea = telebot.types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –†–∞–π–æ–Ω',callback_data='addarea')
    button_deletecity = telebot.types.InlineKeyboardButton(text='‚úñÔ∏è –£–¥–∞–ª–∏—Ç—å –ì–æ—Ä–æ–¥',callback_data='deletecity')
    button_deletearea = telebot.types.InlineKeyboardButton(text='‚úñÔ∏è –£–¥–∞–ª–∏—Ç—å –†–∞–π–æ–Ω',callback_data='deletearea')
    KB_CITYCONTROL.add(button_all)
    KB_CITYCONTROL.row(button_addcity,button_addarea)
    KB_CITYCONTROL.row(button_deletecity,button_deletearea)
    KB_CITYCONTROL.add(button_menu_admin)


    button_close = telebot.types.InlineKeyboardButton(text='‚èÆ –ù–∞–∑–∞–¥',callback_data='close_world')
    KB_CLOSE = telebot.types.InlineKeyboardMarkup()
    KB_CLOSE.add(button_close)

    KB_CATEGORY_ADD = telebot.types.InlineKeyboardMarkup()
    KB_CATEGORY_ADD.add(telebot.types.InlineKeyboardButton(text='üí∞ –ù–∏–∑–∫–∞—è —Ü–µ–Ω–∞',callback_data='cost_c0'))
    KB_CATEGORY_ADD.add(telebot.types.InlineKeyboardButton(text='üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞',callback_data='cost_c1'))
    KB_CATEGORY_ADD.add(telebot.types.InlineKeyboardButton(text='üí∞ –í—ã—Å–æ–∫–∞—è —Ü–µ–Ω–∞',callback_data='cost_c2'))
    KB_CATEGORY_ADD.add(kb_setting_back)

    KB_SETTING = telebot.types.InlineKeyboardMarkup()
    button_showProduct = telebot.types.InlineKeyboardButton(text='üìñ  –°–ø–∏—Å–æ–∫ –¢–æ–≤–∞—Ä–æ–≤  üìñ', callback_data='list_product')
    button_addProduct = telebot.types.InlineKeyboardButton(text='üìù Ô∏è–î–æ–±–∞–≤–∏—Ç—å –¢–æ–≤–∞—Ä—ã', callback_data='add_product')
    button_random_product = telebot.types.InlineKeyboardButton(text='üìå –ó–∞–∫—Ä–µ–ø–∏—Ç—å –¢–æ–≤–∞—Ä—ã',callback_data='random_product')
    button_deleteProduct = telebot.types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –¢–æ–≤–∞—Ä', callback_data='delete_product_data')
    button_contact = telebot.types.InlineKeyboardButton(text='‚úâÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã –û–ø–µ—Ä–∞—Ç–æ—Ä–∞', callback_data='contact')
    button_Export = telebot.types.InlineKeyboardButton(text="‚òÅÔ∏è–≠–∫—Å–ø–æ—Ä—Ç –ë–î", callback_data='export')
    KB_SETTING.add(button_showProduct,button_random_product)
    KB_SETTING.row(button_addProduct, button_deleteProduct)
    KB_SETTING.add(button_contact)
    KB_SETTING.add(button_Export)
    KB_SETTING.add(button_menu_admin)

    KB_LAST_RANDOM = telebot.types.InlineKeyboardMarkup()
    kb_close = telebot.types.InlineKeyboardButton(text='üî®',callback_data='close')
    kb_random_last = telebot.types.InlineKeyboardButton(text='üìå –ó–∞–∫—Ä–µ–ø–∏—Ç—å –¢–æ–≤–∞—Ä—ã',callback_data='random_product_last')
    KB_LAST_RANDOM.row(kb_close,kb_random_last)

    button_edit_contact = telebot.types.InlineKeyboardButton(text='‚úè Ô∏è–ò–∑–º–µ–Ω–∏—Ç—å –ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='edit_contact')
    KB_EXPORT = telebot.types.InlineKeyboardMarkup()
    button_ExportYes = telebot.types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å —ç–∫—Å–ø–æ—Ä—Ç', callback_data='yesexport')
    button_ExportNot = telebot.types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='notexport')
    KB_EXPORT.row(button_ExportYes,button_ExportNot)


    KB_DELETE = telebot.types.ReplyKeyboardRemove()



    def createAddAdmin(self,rights):
        KB = telebot.types.InlineKeyboardMarkup()
        if rights == 2:
            return
        elif rights == 1:
            KB.add(telebot.types.InlineKeyboardButton(text='üîë 2 –£—Ä–æ–≤–µ–Ω—å',callback_data='addadmin{}'.format(2)))
        elif rights == 0:
            KB.add(telebot.types.InlineKeyboardButton(text='üîë 2 –£—Ä–æ–≤–µ–Ω—å',callback_data='addadmin{}'.format(2)))
            KB.add(telebot.types.InlineKeyboardButton(text='üîë 1 –£—Ä–æ–≤–µ–Ω—å',callback_data='addadmin{}'.format(1)))
            KB.add(telebot.types.InlineKeyboardButton(text='üîë 0 –£—Ä–æ–≤–µ–Ω—å',callback_data='addadmin{}'.format(0)))
        KB.add(self.button_back_admin_control)
        return KB
    def createAdminDelete(self, rights):
        KB = telebot.types.InlineKeyboardMarkup()
        listAdmin = DatabaseLogicAdminPanel.DBAdminPanelClass().adminList()
        if not len(listAdmin) > 0:
            KB.add(self.button_back_admin_control)
            return KB
        if rights == 2:
            KB.add(self.button_back_admin_control)
            return KB
        for admin in listAdmin:
            if rights == 1 and admin[2] != 2:
                continue
            KB.add(telebot.types.InlineKeyboardButton(text='üëÆ‚Äç‚ôÇÔ∏è {} - {} —É—Ä–æ–≤–µ–Ω—å '.format(admin[1],admin[2]),
                                                      callback_data="deladmin{}".format(admin[0])))
        KB.add(self.button_back_admin_control)
        return KB

    def createBuy(self, areaId, productId):
        KB_PAY = telebot.types.InlineKeyboardMarkup()
        qiwi = telebot.types.InlineKeyboardButton(text='üí≤ Qiwi üí≤', callback_data="/qiwi{}|{}".format(areaId,productId))
        bitcoin = telebot.types.InlineKeyboardButton(text='‚Çø Bitcoin', callback_data="/bitcoin{}|{}".format(areaId,productId))
        banker = telebot.types.InlineKeyboardButton(text='ü§ñ BTC Banker', callback_data="/banker{}|{}".format(areaId,productId))
        KB_PAY.row(qiwi, bitcoin, banker)
        KB_PAY.add(telebot.types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',callback_data='cancel_pay'))
        return KB_PAY

    def createBuyBtc(self, productInfo, idProduct):
        callbackCheck = "/c{}|{}|{}|{}".format(productInfo[0], productInfo[1], productInfo[2], idProduct)
        KB = telebot.types.InlineKeyboardMarkup()
        button_checkbuy = telebot.types.InlineKeyboardButton(text='üõç –°—Ç–∞—Ç—É—Å –ó–∞–∫–∞–∑–∞',callback_data=callbackCheck)
        button_back = self.button_back
        KB.add(button_checkbuy)
        KB.add(button_back)
        return KB

    def createBuyBot(self,idArea, idProduct, order):
        KB = telebot.types.InlineKeyboardMarkup()
        button_send_cheque = telebot.types.InlineKeyboardButton(text='‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫',callback_data='sendcheck{}|{}'.format(idArea,idProduct))
        button_info = telebot.types.InlineKeyboardButton(text='üõç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                                                         callback_data="/infobot{}|{}|{}".format(idArea, idProduct,
                                                                                                     order))
        button_geo = telebot.types.InlineKeyboardButton(text='üó∫ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ö–ª–∞–¥–∞',
                                                        callback_data="/geobot{}|{}|{}".format(idArea, idProduct,
                                                                                                   order))
        button_cancel = telebot.types.InlineKeyboardButton(text='üóë –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='cancel_pay')
        KB.row(button_send_cheque,button_info)
        KB.add(button_geo)
        KB.add(button_cancel)
        return KB
    def create(self, list):
        KB_CREATE = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        print(list)
        for item in list:
            KB_CREATE.add(item)
        return KB_CREATE

    def createBuyBitcoin(self, idArea, idProduct, order):
        KB = telebot.types.InlineKeyboardMarkup()
        button_info = telebot.types.InlineKeyboardButton(text='üõç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                                                         callback_data="/infobitcoin{}|{}|{}".format(idArea, idProduct,
                                                                                                 order))
        button_geo = telebot.types.InlineKeyboardButton(text='üó∫ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ö–ª–∞–¥–∞',
                                                        callback_data="/geobitcoin{}|{}|{}".format(idArea, idProduct, order))
        button_cancel = telebot.types.InlineKeyboardButton(text='üóë –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='cancel_pay')
        KB.row(button_info, button_geo)
        KB.add(button_cancel)
        return KB
    def createBuyQiwi(self, idArea, idProduct, order, comment):
        dbBuy = DatabaseLogicBuyData.DBBuyDataClass()
        qiwiLink = dbBuy.qiwiDataURL()
        if qiwiLink == False:
            qiwiLink = "https://qiwi.com"
        KB = telebot.types.InlineKeyboardMarkup()
        button_qiwibuy = telebot.types.InlineKeyboardButton(text='üí∞ –û–ø–ª–∞—Ç–∏—Ç—å',url=qiwiLink)
        print("/info{}|{}|{}|{}".format(idArea, idProduct, order, comment))
        print("/geo{}|{}|{}|{}".format(idArea, idProduct, order, comment))
        button_info = telebot.types.InlineKeyboardButton(text='üõç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',callback_data="/info{}|{}|{}|{}".format(idArea, idProduct, order, comment))
        button_geo = telebot.types.InlineKeyboardButton(text='üó∫ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ö–ª–∞–¥–∞', callback_data="/geo{}|{}|{}|{}".format(idArea, idProduct, order, comment))
        button_cancel = telebot.types.InlineKeyboardButton(text='üóë –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='cancel_pay')
        KB.add(button_qiwibuy)
        KB.row(button_info,button_geo)
        KB.add(button_cancel)
        return KB
    def createCityForDeleteArea(self):
        dbCity = DatabaseLogicMarket.DBMarketClass()
        listCity = dbCity.listCity()
        KB_CITY = telebot.types.InlineKeyboardMarkup()
        print(len(listCity))
        if len(listCity) == 0:
            KB_CITY.add(self.kb_world_back)
            return KB_CITY
        i = 0
        while i != len(listCity):
            try:
                cb_o = "/cda{}".format(listCity[i])
                cb_t = "/cda{}".format(listCity[i+1])
                KB_CITY.row(telebot.types.InlineKeyboardButton(text="üèô  {}".format(listCity[i]), callback_data=cb_o),
                            telebot.types.InlineKeyboardButton(text="üèô  {}".format(listCity[i+1]), callback_data=cb_t))
                i+=2
            except:
                KB_CITY.add(telebot.types.InlineKeyboardButton(text="üèô  {}".format(listCity[i]), callback_data=cb_o))
                break
        KB_CITY.add(self.kb_world_back)
        return KB_CITY
    def createCityDelete(self):
        dbCity = DatabaseLogicMarket.DBMarketClass()
        listCity = dbCity.listCity()
        KB_CITY = telebot.types.InlineKeyboardMarkup()
        if not len(listCity) > 0:
            KB_CITY.add(self.kb_world_back)
            return KB_CITY
        for city in listCity:
            cb = "/dc{}".format(city)
            KB_CITY.add(telebot.types.InlineKeyboardButton(text="üóë  {}".format(city), callback_data=cb))
        KB_CITY.add(self.kb_world_back)
        return KB_CITY
    def createCityEdit(self):
        dbCity = DatabaseLogicMarket.DBMarketClass()
        listCity = dbCity.listCity()
        KB_CITY = telebot.types.InlineKeyboardMarkup()
        if len(listCity) == 0:
            KB_CITY.add(self.kb_world_back)
            return KB_CITY
        i=0
        while i != len(listCity):
            try:
                cb_o = "/ac{}".format(listCity[i])
                cb_t = "/ac{}".format(listCity[i+1])
                KB_CITY.row(telebot.types.InlineKeyboardButton(text="üèô  {}".format(listCity[i]), callback_data=cb_o),
                            telebot.types.InlineKeyboardButton(text="üèô  {}".format(listCity[i+1]), callback_data=cb_t))
                i+=2
            except:
                KB_CITY.add(telebot.types.InlineKeyboardButton(text="üèô  {}".format(listCity[i]), callback_data=cb_o))
                break
        KB_CITY.add(self.kb_world_back)
        return KB_CITY
    def createCity(self,aceptCity):
        dbCity = DatabaseLogicMarket.DBMarketClass()
        listCity = dbCity.listCity()
        KB_CITY = telebot.types.InlineKeyboardMarkup()
        if listCity == False:
            return False
        if aceptCity == True:
            i = 5
            while len(listCity)-1 >= i:
                KB_CITY.add(telebot.types.InlineKeyboardButton(text="üåá  {}".format(listCity[i]),
                                                               callback_data="/city{}".format(listCity[i])))
                i += 1
            KB_CITY.add(telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data='/nexttwo'))
            return KB_CITY
        if len(listCity) >= 6:
            i = 0
            while 4 >= i:
                KB_CITY.add(telebot.types.InlineKeyboardButton(text="üåá  {}".format(listCity[i]),
                                                               callback_data="/city{}".format(listCity[i])))
                i += 1
            KB_CITY.add(telebot.types.InlineKeyboardButton(text='–ï—â–µ –≥–æ—Ä–æ–¥–∞ ‚û°Ô∏è',callback_data='/nextone'))
            return KB_CITY
        else:
            for city in listCity:
                KB_CITY.add(telebot.types.InlineKeyboardButton(text="üåá  {}".format(city),
                                                               callback_data="/city{}".format(city)))
            return KB_CITY
    def createAreaDelete(self, city):
        dbArea = DatabaseLogicMarket.DBMarketClass()
        listArea = dbArea.listAreaForCity(city)
        idCity = dbArea.getIdCity(city)
        KB_AREA = telebot.types.InlineKeyboardMarkup()
        if listArea == False:
            KB = telebot.types.InlineKeyboardMarkup()
            KB.add(self.kb_world_back)
            return KB
        for item in listArea:
            callbackdata = "/da{}|{}".format(item, idCity)
            button = telebot.types.InlineKeyboardButton(text="üóë  {}".format(item), callback_data=callbackdata)
            KB_AREA.add(button)
        KB_AREA.add(self.kb_world_back)
        return KB_AREA
    def createArea(self, city):
        dbArea = DatabaseLogicMarket.DBMarketClass()
        listArea = dbArea.listAreaForCity(city)
        KB_AREA = telebot.types.InlineKeyboardMarkup()
        if listArea == False:
            KB_AREA.add(telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='/nexttwo'))
            return KB_AREA
        if len(listArea) == 1:
            c_o = dbArea.getIdArea(city, listArea[0])
            KB_AREA.add(telebot.types.InlineKeyboardButton(text='üè£ {}'.format(listArea[0]),callback_data='/area{}'.format(c_o)))
            KB_AREA.add(telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='/nexttwo'))
            return KB_AREA
        i = 0
        while len(listArea)-1 > i:
            i += 1
            c_o = dbArea.getIdArea(city,listArea[i])
            c_t = dbArea.getIdArea(city,listArea[i-1])
            KB_AREA.row(telebot.types.InlineKeyboardButton(text='üè£ {}'.format(listArea[i]),callback_data='/area{}'.format(c_o)),
                        telebot.types.InlineKeyboardButton(text='üè£ {}'.format(listArea[i-1]),callback_data='/area{}'.format(c_t)))
            i += 1
            if len(listArea)-1 == i:
                c_o = dbArea.getIdArea(city, listArea[i])
                KB_AREA.add(telebot.types.InlineKeyboardButton(text='üè£ {}'.format(listArea[i]),callback_data='/area{}'.format(c_o)))
                break
        KB_AREA.add(telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='/nexttwo'))
        return KB_AREA
    def createProductDelete(self):
        dbProduct = DatabaseLogicProduct.DBProductClass()
        count = dbProduct.countProduct()
        if count == 0:
            return False
        list = dbProduct.listDelete()
        KB = telebot.types.InlineKeyboardMarkup()
        for p in list:
            KB.add(telebot.types.InlineKeyboardButton(text='üõç {} {} - {}‚ÇΩ'.format(
                p[1], p[2], p[3]
            ), callback_data="/delete_product{}".format(p[0])))
        KB.add(self.kb_setting_back)
        return KB
    def createProduct(self, areaID):
        dbProduct = DatabaseLogicProduct.DBProductClass()
        dbMarket = DatabaseLogicMarket.DBMarketClass()
        KB_PRODUCT = telebot.types.InlineKeyboardMarkup()
        cityName = dbMarket.getInfoArea(areaID)[0]
        productID = dbMarket.productIDsByArea(areaID)
        count = len(productID)
        if not count > 0:
            KB_PRODUCT.add(telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='/product_back{}'.format(
                cityName
            )))
            return KB_PRODUCT
        for product in productID:
            cb = "/sell{}|{}".format(areaID,product)
            print("cb = {}".format(cb))
            p_i = "üõç {}".format(dbProduct.productInfo(product))
            KB_PRODUCT.add(telebot.types.InlineKeyboardButton(text=p_i, callback_data=cb))

        KB_PRODUCT.add(telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='/product_back{}'.format(
            cityName
        )))
        return KB_PRODUCT